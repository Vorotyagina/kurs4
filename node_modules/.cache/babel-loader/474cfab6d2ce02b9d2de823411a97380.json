{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend4\\\\sky-react6\\\\src\\\\components\\\\BookCart.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport MinMax from './MinMax';\nimport Total from './Total';\nimport DelButton from './DelButton';\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction booksStub() {\n  return [{\n    id: 1,\n    title: 'Война и мир - Л.Н.Толстой',\n    price: 800,\n    rest: 10,\n    quantity: 1\n  }, {\n    id: 2,\n    title: 'Две жизни - К.Е.Антарова',\n    price: 700,\n    rest: 5,\n    quantity: 1\n  }, {\n    id: 3,\n    title: 'Разговор с богом - Н.Д.Уолша',\n    price: 1000,\n    rest: 2,\n    quantity: 1\n  }, {\n    id: 4,\n    title: 'Хроники Ехо - Макс Фрай',\n    price: 400,\n    rest: 8,\n    quantity: 1\n  }, {\n    id: 5,\n    title: 'Хохот Шамана - В.П.Серкин',\n    price: 600,\n    rest: 8,\n    quantity: 1\n  }];\n}\n\nfunction loginData() {\n  return [{\n    login: '',\n    password: ''\n  }, {\n    error: ''\n  }];\n}\n\nexport default function BookCart() {\n  _s();\n\n  const [books, setBooks] = useState(booksStub());\n  const [logData, setLogData] = useState(loginData());\n\n  const setQuantity = (id, quantity) => {\n    setBooks(books.map(book => book.id !== id ? book : { ...book,\n      quantity\n    }));\n  };\n\n  function setDeleteItem(id) {\n    setBooks(books.filter(book => book.id !== id));\n    return books;\n  }\n\n  const setLogin = (value, isRequired, what) => {\n    if (isRequired) {\n      console.log(logData[1].error);\n\n      if (value === '') {\n        setLogData([{\n          login: value,\n          password: logData[0].password\n        }, {\n          error: \"Введите логин или пароль\"\n        }]);\n      } else {\n        setLo;\n\n        if (what === \"login\") {\n          setLogData([{\n            login: value,\n            password: logData[0].password\n          }, {\n            error: logData[1].error\n          }]);\n        }\n\n        if (what === \"password\") {\n          setLogData([{\n            login: logData[0].login,\n            password: value\n          }, {\n            error: logData[1].error\n          }]);\n        }\n      }\n    }\n  }; //const [result, setResult] = useInputRequired()\n  //     2. Реализовать пользовательский хук useInputRequired().\n  // В данном хуке, помимо возвращаемого значения и функций изменения(`onChange`), \n  // на событие `onBlur` повесить логику обязательного/необязательного поля с возможностью передачи флага `required` \n  // вторым параметром хука. Ошибка должна храниться отдельным состоянием. То есть, если поле ввода будет пустым и не в фокусе, \n  // то возникнет предупреждение, что данное поле обязательно должно быть заполнено.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"some\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"books list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), books.map((book, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(MinMax, {\n              max: book.rest,\n              current: book.quantity,\n              onChange: quantity => {\n                setQuantity(book.id, quantity);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.price * book.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(DelButton, {\n              item: book.id,\n              onClick: () => {\n                setDeleteItem(book.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, book.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Total, {\n              booksCart: books.reduce((result, item) => result += Number(item.price) * Number(item.quantity), 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      login: logData[0].login,\n      password: logData[0].password,\n      error: logData[1].error,\n      onBlur: (value, isRequied, what) => setLogin(value, isRequied, what),\n      onChange: (value, isRequired, what) => setLogin(value, isRequired, what)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n/* \r\nconst setquantity = (id, quantity) => {\r\n\tconst newbooks = [ ...books ];\r\n\tconst productInd = books.findIndex(book => book.id == id);\r\n\tconst newProduct = { ...books[productInd] };\r\n\tnewProduct.quantity = quantity;\r\n\tnewbooks[productInd] = newProduct;\r\n\tsetbooks(newbooks);\r\n} */\n\n_s(BookCart, \"lt1zgtRl6W4UiaIqJwd18g3DoTI=\");\n\n_c = BookCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookCart\");","map":{"version":3,"sources":["C:/frontend4/sky-react6/src/components/BookCart.js"],"names":["useState","MinMax","Total","DelButton","Login","booksStub","id","title","price","rest","quantity","loginData","login","password","error","BookCart","books","setBooks","logData","setLogData","setQuantity","map","book","setDeleteItem","filter","setLogin","value","isRequired","what","console","log","setLo","i","reduce","result","item","Number","isRequied"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport MinMax from './MinMax'\r\nimport Total from './Total'\r\nimport DelButton from './DelButton'\r\nimport Login from './Login'\r\n\r\nfunction booksStub() {\r\n  return [\r\n    {\r\n      id: 1,\r\n      title: 'Война и мир - Л.Н.Толстой',\r\n      price: 800,\r\n      rest: 10,\r\n      quantity: 1,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Две жизни - К.Е.Антарова',\r\n      price: 700,\r\n      rest: 5,\r\n      quantity: 1,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Разговор с богом - Н.Д.Уолша',\r\n      price: 1000,\r\n      rest: 2,\r\n      quantity: 1,\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Хроники Ехо - Макс Фрай',\r\n      price: 400,\r\n      rest: 8,\r\n      quantity: 1,\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Хохот Шамана - В.П.Серкин',\r\n      price: 600,\r\n      rest: 8,\r\n      quantity: 1,\r\n    },\r\n  ]\r\n}\r\n\r\nfunction loginData() {\r\n  return ([{\r\n    login: '',\r\n    password: '',\r\n  }, \r\n  {\r\n    error: '',\r\n    }])\r\n}\r\n\r\nexport default function BookCart() {\r\n  const [books, setBooks] = useState(booksStub())\r\n  const [logData, setLogData] = useState(loginData())\r\n\r\n  const setQuantity = (id, quantity) => {\r\n    setBooks(\r\n      books.map((book) => (book.id !== id ? book : { ...book, quantity }))\r\n    )\r\n }\r\n\r\nfunction setDeleteItem(id) {\r\n      setBooks(books.filter((book) => book.id !== id))\r\n      return books\r\n    }\r\n\r\nconst setLogin = (value, isRequired, what) => {\r\n  if (isRequired) {\r\n    console.log(logData[1].error)\r\n    if (value === '') {\r\n      setLogData([{\r\n        login: value,\r\n        password: logData[0].password,\r\n      },{\r\n        error: \"Введите логин или пароль\"\r\n      }])\r\n    } else {\r\n      setLo\r\n      if (what === \"login\") {\r\n        setLogData([{\r\n          login: value,\r\n          password: logData[0].password,\r\n        },{\r\n          error: logData[1].error\r\n        }])\r\n      } \r\n      if (what === \"password\") {\r\n      setLogData([{\r\n        login: logData[0].login,\r\n        password: value,\r\n      },{\r\n        error: logData[1].error\r\n      }])\r\n  } \r\n}\r\n}\r\n }\r\n\r\n\r\n//const [result, setResult] = useInputRequired()\r\n//     2. Реализовать пользовательский хук useInputRequired().\r\n\r\n// В данном хуке, помимо возвращаемого значения и функций изменения(`onChange`), \r\n// на событие `onBlur` повесить логику обязательного/необязательного поля с возможностью передачи флага `required` \r\n// вторым параметром хука. Ошибка должна храниться отдельным состоянием. То есть, если поле ввода будет пустым и не в фокусе, \r\n// то возникнет предупреждение, что данное поле обязательно должно быть заполнено.\r\n    \r\n  return (\r\n    <div className=\"some\">\r\n      <h1>books list</h1>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Title</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Total</th>\r\n            <th></th>\r\n          </tr>\r\n          {books.map((book, i) => (\r\n            <tr key={book.id}>\r\n              <td>{i + 1}</td>\r\n              <td>{book.title}</td>\r\n              <td>{book.price}</td>\r\n              <td>\r\n                <MinMax\r\n                  max={book.rest}\r\n                  current={book.quantity}\r\n                  onChange={(quantity) => {\r\n                    setQuantity(book.id, quantity)\r\n                    }}\r\n                />\r\n              </td>\r\n              <td>{book.price * book.quantity}</td>\r\n              <td>\r\n                <DelButton \r\n                  item={book.id}\r\n                  onClick={() => {setDeleteItem(book.id)\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n         \r\n          ))}\r\n             <tr>\r\n               <td></td>\r\n               <td>\r\n              <Total booksCart={books.reduce((result, item) => \r\n                result += Number(item.price) * Number(item.quantity)\r\n              , 0)\r\n              }/>\r\n              </td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n      <Login login={logData[0].login} password={logData[0].password} \r\n      error={logData[1].error}\r\n      onBlur={(value, isRequied, what) => setLogin(value, isRequied, what)} \r\n      onChange={(value, isRequired, what) => setLogin(value, isRequired, what)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n/* \r\nconst setquantity = (id, quantity) => {\r\n\tconst newbooks = [ ...books ];\r\n\tconst productInd = books.findIndex(book => book.id == id);\r\n\tconst newProduct = { ...books[productInd] };\r\n\tnewProduct.quantity = quantity;\r\n\tnewbooks[productInd] = newProduct;\r\n\tsetbooks(newbooks);\r\n} */\r\n"]},"metadata":{},"sourceType":"module"}