{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend4\\\\sky-react6\\\\src\\\\components\\\\BookCart.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport MinMax from './MinMax';\nimport Total from './Total';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction booksStub() {\n  return [{\n    id: 1,\n    title: 'Война и мир - Л.Н.Толстой',\n    price: 800,\n    rest: 10,\n    quantity: 1\n  }, {\n    id: 2,\n    title: 'Две жизни - К.Е.Антарова',\n    price: 700,\n    rest: 5,\n    quantity: 1\n  }, {\n    id: 3,\n    title: 'Разговор с богом - Н.Д.Уолша',\n    price: 1000,\n    rest: 2,\n    quantity: 1\n  }, {\n    id: 5,\n    title: 'Хохот Шамана - В.П.Серкин',\n    price: 600,\n    rest: 8,\n    quantity: 1\n  }, {\n    id: 4,\n    title: 'Хроники Ехо - Макс Фрай',\n    price: 400,\n    rest: 8,\n    quantity: 1\n  }];\n}\n\nexport default function BookCart() {\n  _s();\n\n  const [books, setBooks] = useState(booksStub());\n  let total;\n\n  const setQuantity = (id, quantity) => {\n    setBooks(books.map(book => book.id !== id ? book : { ...book,\n      quantity\n    }));\n  };\n\n  const setTotalQuantity = (id, quantity) => {\n    setTotal(books.map(book => book.id !== id ? book : { ...book,\n      quantity\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"some\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"books list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), books.map((book, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(MinMax, {\n              max: book.rest,\n              current: book.quantity,\n              onChange: quantity => {\n                setQuantity(book.id, quantity);\n                setTotalQuantity(book.id, quantity);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.price * book.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, book.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(Total, {\n            booksCart: books\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n/* \r\nconst setquantity = (id, quantity) => {\r\n\tconst newbooks = [ ...books ];\r\n\tconst productInd = books.findIndex(book => book.id == id);\r\n\tconst newProduct = { ...books[productInd] };\r\n\tnewProduct.quantity = quantity;\r\n\tnewbooks[productInd] = newProduct;\r\n\tsetbooks(newbooks);\r\n} */\n\n_s(BookCart, \"rVNWyyEsB1m53bvNb4nFbOQu2x0=\");\n\n_c = BookCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookCart\");","map":{"version":3,"sources":["C:/frontend4/sky-react6/src/components/BookCart.js"],"names":["useState","MinMax","Total","booksStub","id","title","price","rest","quantity","BookCart","books","setBooks","total","setQuantity","map","book","setTotalQuantity","setTotal","i"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport MinMax from './MinMax'\r\nimport Total from './Total'\r\n\r\n\r\nfunction booksStub() {\r\n  return [\r\n    {\r\n      id: 1,\r\n      title: 'Война и мир - Л.Н.Толстой',\r\n      price: 800,\r\n      rest: 10,\r\n      quantity: 1,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Две жизни - К.Е.Антарова',\r\n      price: 700,\r\n      rest: 5,\r\n      quantity: 1,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Разговор с богом - Н.Д.Уолша',\r\n      price: 1000,\r\n      rest: 2,\r\n      quantity: 1,\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Хохот Шамана - В.П.Серкин',\r\n      price: 600,\r\n      rest: 8,\r\n      quantity: 1,\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Хроники Ехо - Макс Фрай',\r\n      price: 400,\r\n      rest: 8,\r\n      quantity: 1,\r\n    },\r\n  ]\r\n}\r\nexport default function BookCart() {\r\n  const [books, setBooks] = useState(booksStub())\r\n  let total\r\n\r\n  const setQuantity = (id, quantity) => {\r\n    setBooks(\r\n      books.map((book) => (book.id !== id ? book : { ...book, quantity }))\r\n      \r\n    )\r\n  }\r\n\r\n  const setTotalQuantity = (id, quantity) => {\r\n    setTotal(\r\n      books.map((book) => (book.id !== id ? book : { ...book, quantity }))\r\n      \r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"some\">\r\n      <h1>books list</h1>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Title</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Total</th>\r\n       \r\n          </tr>\r\n          {books.map((book, i) => (\r\n            <tr key={book.id}>\r\n              <td>{i + 1}</td>\r\n              <td>{book.title}</td>\r\n              <td>{book.price}</td>\r\n              <td>\r\n                <MinMax\r\n                  max={book.rest}\r\n                  current={book.quantity}\r\n                  onChange={(quantity) => {\r\n                    setQuantity(book.id, quantity)\r\n                    setTotalQuantity(book.id, quantity)\r\n                    }}\r\n                />\r\n              </td>\r\n              <td>{book.price * book.quantity}</td>\r\n            </tr>\r\n         \r\n          ))}\r\n             <tr>\r\n              <Total booksCart={books}/>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\n/* \r\nconst setquantity = (id, quantity) => {\r\n\tconst newbooks = [ ...books ];\r\n\tconst productInd = books.findIndex(book => book.id == id);\r\n\tconst newProduct = { ...books[productInd] };\r\n\tnewProduct.quantity = quantity;\r\n\tnewbooks[productInd] = newProduct;\r\n\tsetbooks(newbooks);\r\n} */\r\n"]},"metadata":{},"sourceType":"module"}